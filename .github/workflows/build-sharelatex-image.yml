name: build sharelatex image
run-name: build sharelatex image - ${{ github.event_name }}

on:
  workflow_dispatch:
  push:
    paths:
      - 'sharelatex/**'

permissions:
  contents: read
  packages: write

jobs:
  BuildShareLatexImage:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/amd64
          - os: ubuntu-24.04-arm
            platform: linux/arm64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "REGISTRY_IMAGE=`echo ghcr.io/${{ github.repository_owner }}/sharelatex | tr '[:upper:]' '[:lower:]'`" >> ${GITHUB_ENV}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: sharelatex base image build (arm64 only)
        if: ${{ matrix.platform == 'linux/arm64' }}
        run: |
          git clone https://github.com/overleaf/overleaf --depth 1 --recursive
          docker build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --progress=plain \
            --file overleaf/server-ce/Dockerfile-base \
            --pull \
            --tag sharelatex/sharelatex-base:latest \
            overleaf
          docker build \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --progress=plain \
            --file overleaf/server-ce/Dockerfile \
            --tag sharelatex/sharelatex:latest \
            overleaf
      
      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./sharelatex
          file: sharelatex/Dockerfile
          load: true
          push: true
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - BuildShareLatexImage
    steps:
      - name: Prepare
        run: |
          echo "REGISTRY_IMAGE=`echo ghcr.io/${{ github.repository_owner }}/sharelatex | tr '[:upper:]' '[:lower:]'`" >> ${GITHUB_ENV}

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,prefix=pr-,suffix=,event=pr
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
